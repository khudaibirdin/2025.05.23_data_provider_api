// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth": {
            "post": {
                "description": "Авторизация/регистрация пользователя и получение токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Авторизация/регистрация пользователя",
                "parameters": [
                    {
                        "description": "Auth credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponce"
                        }
                    }
                }
            }
        },
        "/api/v1/pressure": {
            "get": {
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "description": "Возвращает значение давления в Паскалях",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Данные"
                ],
                "summary": "Получить значение давления",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.PressureResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/temperature": {
            "get": {
                "security": [
                    {
                        "x-api-key": []
                    }
                ],
                "description": "Возвращает значение температуры в градусах",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Данные"
                ],
                "summary": "Получить значение температуры",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TemperatureResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.AuthRequest": {
            "description": "Authentication request payload",
            "type": "object",
            "required": [
                "name",
                "surname",
                "university_number"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Иван"
                },
                "surname": {
                    "type": "string",
                    "example": "Иванов"
                },
                "university_number": {
                    "type": "integer",
                    "example": 182551
                }
            }
        },
        "handlers.AuthResponce": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "a3eb9104-bc88-45b4-b250-87e2ba0b5e65"
                }
            }
        },
        "handlers.PressureResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "integer",
                    "example": 125
                }
            }
        },
        "handlers.TemperatureResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "integer",
                    "example": 42
                }
            }
        }
    },
    "securityDefinitions": {
        "x-api-key": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "API для студентов (Data provider)",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
